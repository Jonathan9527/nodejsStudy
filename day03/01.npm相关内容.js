/**
 * 
### 安装和卸载全局包
1. 什么是全局的包：通过  `npm install  包名  -g` 方式安装的包，都安装到了全局；一般全局的安装目录是`C:\Users\自己的用户文件夹\AppData\Roaming\npm`
2. 带大家演示如何安装一个全局的包：`npm install i5ting_toc -g`， 注意：这里的`-g`表示全局安装包的意思；
3. 注意：一般，只有一些工具，才有全局安装的必要性；
4. 如果要全局卸载某个包，比如要卸载 `i5ting_toc`了，直接运行`npm uninstall i5ting_toc -g`就可以全局卸载包了！
### 安装和卸载本地包
1. 什么是本地的包：跟着项目安装的包，叫做本地包；
2. 如果拿到一个空项目，必须先初始化一个`package.json`的配置文件，`npm init`或者`npm init -y`
3. 运行`npm i 包名 --save`去安装指定的包，本地安装的包，都安装到了`node_modules`的目录下
4. 如果大家用的是npm 5.x的版本，可以不指定`--save`命令，如果用的是 npm 3.x 的版本，则需要手动指定 `--save`, 同时，`--save`有缩写形式，是：`-S`
5. `package-lock.json`文件中记录了曾经装过的包的下载地址，方便下次直接下载包；
### 其它常用命令
1. `--save-dev`它的缩写是`-D`
2. 注意：`dependencies`节点，表示项目上线部署时候需要的依赖项；`devDependencies`节点，表示项目在开发阶段需要的依赖项，但是当项目要部署上线了，`devDependencies`节点中的包，就不再需要了！
3. 注意：当使用`npm i`快速装包的时候，npm会检查`package.json`文件中，所有的依赖项，然后都为我们安装到项目中
4. `--production` 表示只安装 `dependencies` 节点下，记录的包，不安装`devDependencies`节点下的包；当项目要上线了，才会使用`--production`命令
### 解决 npm 下载慢问题
1. 默认，NPM在下载包的时候，连接的是国外的服务器，所以，有时候如果网速不是特别好，可能下载不下来包；此时，大家可以安装一个工具，叫做`nrm`，里面记录了好多下载NPM包的服务器地址，可以让我们方便的切换下载包时候请求的服务器；
2. 运行`npm i nrm -g`（注意：只要是工具，一般都是全局 -g 安装）
3. 当装完 nrm 之后，可以运行`nrm ls` 查看所有可用的服务器列表
4. 可使用`nrm use 服务器名称`来切换下载包时候的服务器地址
*/